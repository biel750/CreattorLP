// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 9aunZZ4t846y1592QqJ7VC
// Component: UXWTBNL_fu
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: 8uJGPonSAj-MG/component
import FooterCreattor from "../../FooterCreattor"; // plasmic-import: --UNrw1048/component

import { useScreenVariants as useScreenVariantsav4KQZoKxu4Muo } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: av4kQZoKxu4MUO/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_creattor.module.css"; // plasmic-import: 9aunZZ4t846y1592QqJ7VC/projectcss
import sty from "./PlasmicDicasVideoCreattor.module.css"; // plasmic-import: UXWTBNL_fu/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: mN1jZXp3Us1XbS/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: nMqfnF4RZnsINk/icon

export type PlasmicDicasVideoCreattor__VariantMembers = {};

export type PlasmicDicasVideoCreattor__VariantsArgs = {};
type VariantPropType = keyof PlasmicDicasVideoCreattor__VariantsArgs;
export const PlasmicDicasVideoCreattor__VariantProps =
  new Array<VariantPropType>();

export type PlasmicDicasVideoCreattor__ArgsType = {};
type ArgPropType = keyof PlasmicDicasVideoCreattor__ArgsType;
export const PlasmicDicasVideoCreattor__ArgProps = new Array<ArgPropType>();

export type PlasmicDicasVideoCreattor__OverridesType = {
  root?: p.Flex<"div">;
  footerCreattor?: p.Flex<typeof FooterCreattor>;
};

export interface DefaultDicasVideoCreattorProps {}

function PlasmicDicasVideoCreattor__RenderFunc(props: {
  variants: PlasmicDicasVideoCreattor__VariantsArgs;
  args: PlasmicDicasVideoCreattor__ArgsType;
  overrides: PlasmicDicasVideoCreattor__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsav4KQZoKxu4Muo()
  });

  return (
    <React.Fragment>
      {}

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          {true ? (
            <section
              className={classNames(projectcss.all, sty.section__vEBk)}
              id={"sobre" as const}
            >
              <div className={classNames(projectcss.all, sty.columns__r0CpJ)}>
                <div className={classNames(projectcss.all, sty.column__lvEi9)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__uJbXu)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__bDzYo
                      )}
                    >
                      {"Creattors"}
                    </h2>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4IIcS
                      )}
                    >
                      {
                        "Conheça nossas creattors e veja dicas valiosas para começar a criar e ganhar cashback por suas avaliações"
                      }
                    </div>

                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button___0Fu4
                        )}
                        color={"darkBlue" as const}
                        link={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("#contato" as const)
                            : undefined
                        }
                        shape={"rounded" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__b4ZWr
                          )}
                        >
                          {"Saiba mais"}
                        </div>
                      </Button>
                    ) : null}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column__lkS8)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ksbaq)}
                  >
                    {true ? (
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__nfiy2)}
                        displayHeight={"457px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/creattor/images/group8Png.png",
                          fullWidth: 393,
                          fullHeight: 469,
                          aspectRatio: undefined
                        }}
                      />
                    ) : null}

                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : false
                    ) ? (
                      <p
                        className={classNames(
                          projectcss.all,
                          projectcss.p,
                          projectcss.__wab_text,
                          sty.p__x8VPn
                        )}
                      >
                        {"Estamos aqui! Estamos prontos para te atender."}
                      </p>
                    ) : null}

                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : false
                    ) ? (
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__hLxat
                        )}
                        color={"darkBlue" as const}
                        link={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("https://api.whatsapp.com/send?phone=5513920001845&text=Ol%C3%A1!" as const)
                            : ("https://api.whatsapp.com/send?phone=5513920001845&text=Ol%C3%A1!" as const)
                        }
                        shape={"rounded" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__owWU
                          )}
                        >
                          {"ENTRE EM CONTATO"}
                        </div>
                      </Button>
                    ) : null}
                  </div>
                </div>
              </div>
            </section>
          ) : null}

          {true ? (
            <section
              className={classNames(projectcss.all, sty.section__kN2Oh)}
              id={"sobre" as const}
            >
              <div className={classNames(projectcss.all, sty.columns__ksNil)}>
                <div className={classNames(projectcss.all, sty.column__wKoPh)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__x6Hiv)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__cXmMq
                      )}
                    >
                      {"Dicas para criar vídeos profissionais"}
                    </h2>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__zWiQr)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__lyLq0)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/creattor/images/image991Png.png",
                          fullWidth: 94,
                          fullHeight: 94,
                          aspectRatio: undefined
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__yLlA
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tPoa
                          )}
                        >
                          {"por Sabrina Sato"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aYzyK
                          )}
                        >
                          {"@sabrinasato"}
                        </div>
                      </div>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ddvxT
                      )}
                    >
                      {
                        "We are a fully-managed video production studio, removing the stress of creating video assets. \n\nVirtual video production house, helping companies create video content remotely with professional producers and editors"
                      }
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__q7LiR
                      )}
                    >
                      {"Veja as dicas"}
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox___13K4B)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__ghlE)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/creattor/images/image981Png.png",
                        fullWidth: 63,
                        fullHeight: 63,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__f2PJr)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/creattor/images/image981Png.png",
                        fullWidth: 63,
                        fullHeight: 63,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__q7V8Y)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/creattor/images/image981Png.png",
                        fullWidth: 63,
                        fullHeight: 63,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__ttdQ)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/creattor/images/image981Png.png",
                        fullWidth: 63,
                        fullHeight: 63,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__so2Qu)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/creattor/images/image981Png.png",
                        fullWidth: 63,
                        fullHeight: 63,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column__fG33)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__wSQf7)}
                  >
                    {true ? (
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__j2WKk)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/creattor/images/group43Png.png",
                          fullWidth: 342,
                          fullHeight: 574,
                          aspectRatio: undefined
                        }}
                      />
                    ) : null}

                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : false
                    ) ? (
                      <p
                        className={classNames(
                          projectcss.all,
                          projectcss.p,
                          projectcss.__wab_text,
                          sty.p__byyGn
                        )}
                      >
                        {"Estamos aqui! Estamos prontos para te atender."}
                      </p>
                    ) : null}

                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : false
                    ) ? (
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__pFpsr
                        )}
                        color={"darkBlue" as const}
                        link={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("https://api.whatsapp.com/send?phone=5513920001845&text=Ol%C3%A1!" as const)
                            : ("https://api.whatsapp.com/send?phone=5513920001845&text=Ol%C3%A1!" as const)
                        }
                        shape={"rounded" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__lkoxn
                          )}
                        >
                          {"ENTRE EM CONTATO"}
                        </div>
                      </Button>
                    ) : null}
                  </div>
                </div>
              </div>
            </section>
          ) : null}

          {true ? (
            <section
              className={classNames(projectcss.all, sty.section__ghnVg)}
              id={"sobre" as const}
            >
              <div className={classNames(projectcss.all, sty.columns__z8CFg)}>
                <div className={classNames(projectcss.all, sty.column__gdrx8)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__wXiou)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__avpv1
                      )}
                    >
                      {"Como aumentar o engajamento e ganhos"}
                    </h2>

                    <div
                      className={classNames(projectcss.all, sty.freeBox___35EP)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___4FHyz)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/creattor/images/image100Png.png",
                          fullWidth: 94,
                          fullHeight: 94,
                          aspectRatio: undefined
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___6HmNr
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vAii3
                          )}
                        >
                          {"por Bianca Rosa"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__cJQo
                          )}
                        >
                          {"@bianca"}
                        </div>
                      </div>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__b5Ppm
                      )}
                    >
                      {
                        "We are a fully-managed video production studio, removing the stress of creating video assets. \n\nVirtual video production house, helping companies create video content remotely with professional producers and editors"
                      }
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bgYjE
                      )}
                    >
                      {"Veja as dicas"}
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__j32Sx)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__kvtOs)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/creattor/images/image981Png.png",
                        fullWidth: 63,
                        fullHeight: 63,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__p6XlW)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/creattor/images/image981Png.png",
                        fullWidth: 63,
                        fullHeight: 63,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__lnzF9)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/creattor/images/image981Png.png",
                        fullWidth: 63,
                        fullHeight: 63,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__ufzi5)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/creattor/images/image981Png.png",
                        fullWidth: 63,
                        fullHeight: 63,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__knMDk)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/creattor/images/image981Png.png",
                        fullWidth: 63,
                        fullHeight: 63,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column__n36V)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lMkL)}
                  >
                    {true ? (
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__pdw3C)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/creattor/images/group43Png.png",
                          fullWidth: 342,
                          fullHeight: 574,
                          aspectRatio: undefined
                        }}
                      />
                    ) : null}

                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : false
                    ) ? (
                      <p
                        className={classNames(
                          projectcss.all,
                          projectcss.p,
                          projectcss.__wab_text,
                          sty.p__j99Q
                        )}
                      >
                        {"Estamos aqui! Estamos prontos para te atender."}
                      </p>
                    ) : null}

                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : false
                    ) ? (
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__w5HoT
                        )}
                        color={"darkBlue" as const}
                        link={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("https://api.whatsapp.com/send?phone=5513920001845&text=Ol%C3%A1!" as const)
                            : ("https://api.whatsapp.com/send?phone=5513920001845&text=Ol%C3%A1!" as const)
                        }
                        shape={"rounded" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wzi55
                          )}
                        >
                          {"ENTRE EM CONTATO"}
                        </div>
                      </Button>
                    ) : null}
                  </div>
                </div>
              </div>
            </section>
          ) : null}

          {true ? (
            <section
              className={classNames(projectcss.all, sty.section__kcwUh)}
              id={"sobre" as const}
            >
              <div className={classNames(projectcss.all, sty.columns__rbVs7)}>
                <div className={classNames(projectcss.all, sty.column__clStw)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__baiCe)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__iVval
                      )}
                    >
                      {"Importância do engajamento social para marcas "}
                    </h2>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__meJ4B)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__yotyy)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/creattor/images/image991Png.png",
                          fullWidth: 94,
                          fullHeight: 94,
                          aspectRatio: undefined
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__xq7Fe
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__hFiSc
                          )}
                        >
                          {"por Sabrina Sato"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___64IkD
                          )}
                        >
                          {"@sabrinasato"}
                        </div>
                      </div>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__a0XDs
                      )}
                    >
                      {
                        "We are a fully-managed video production studio, removing the stress of creating video assets. \n\nVirtual video production house, helping companies create video content remotely with professional producers and editors"
                      }
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sxalx
                      )}
                    >
                      {"Veja as dicas"}
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__zWwAr)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__u0IQ1)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/creattor/images/image981Png.png",
                        fullWidth: 63,
                        fullHeight: 63,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__fq6TU)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/creattor/images/image981Png.png",
                        fullWidth: 63,
                        fullHeight: 63,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__g6Eh)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/creattor/images/image981Png.png",
                        fullWidth: 63,
                        fullHeight: 63,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__olBrK)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/creattor/images/image981Png.png",
                        fullWidth: 63,
                        fullHeight: 63,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__qdnwM)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/creattor/images/image981Png.png",
                        fullWidth: 63,
                        fullHeight: 63,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column__v4Lqk)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___0M6X8)}
                  >
                    {true ? (
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__e03G0)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/creattor/images/group43Png.png",
                          fullWidth: 342,
                          fullHeight: 574,
                          aspectRatio: undefined
                        }}
                      />
                    ) : null}

                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : false
                    ) ? (
                      <p
                        className={classNames(
                          projectcss.all,
                          projectcss.p,
                          projectcss.__wab_text,
                          sty.p___4Eufv
                        )}
                      >
                        {"Estamos aqui! Estamos prontos para te atender."}
                      </p>
                    ) : null}

                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : false
                    ) ? (
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__sEYi3
                        )}
                        color={"darkBlue" as const}
                        link={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("https://api.whatsapp.com/send?phone=5513920001845&text=Ol%C3%A1!" as const)
                            : ("https://api.whatsapp.com/send?phone=5513920001845&text=Ol%C3%A1!" as const)
                        }
                        shape={"rounded" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nt4Uv
                          )}
                        >
                          {"ENTRE EM CONTATO"}
                        </div>
                      </Button>
                    ) : null}
                  </div>
                </div>
              </div>
            </section>
          ) : null}

          <FooterCreattor
            data-plasmic-name={"footerCreattor"}
            data-plasmic-override={overrides.footerCreattor}
            className={classNames("__wab_instance", sty.footerCreattor)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "footerCreattor"],
  footerCreattor: ["footerCreattor"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  footerCreattor: typeof FooterCreattor;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicDicasVideoCreattor__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicDicasVideoCreattor__VariantsArgs;
    args?: PlasmicDicasVideoCreattor__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicDicasVideoCreattor__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicDicasVideoCreattor__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicDicasVideoCreattor__ArgProps,
          internalVariantPropNames: PlasmicDicasVideoCreattor__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicDicasVideoCreattor__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicDicasVideoCreattor";
  } else {
    func.displayName = `PlasmicDicasVideoCreattor.${nodeName}`;
  }
  return func;
}

export const PlasmicDicasVideoCreattor = Object.assign(
  // Top-level PlasmicDicasVideoCreattor renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    footerCreattor: makeNodeComponent("footerCreattor"),

    // Metadata about props expected for PlasmicDicasVideoCreattor
    internalVariantProps: PlasmicDicasVideoCreattor__VariantProps,
    internalArgProps: PlasmicDicasVideoCreattor__ArgProps
  }
);

export default PlasmicDicasVideoCreattor;
/* prettier-ignore-end */
