// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 9aunZZ4t846y1592QqJ7VC
// Component: zM3uq0O2ue
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import FooterCreattor from "../../FooterCreattor"; // plasmic-import: --UNrw1048/component

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_creattor.module.css"; // plasmic-import: 9aunZZ4t846y1592QqJ7VC/projectcss
import sty from "./PlasmicLojasParceirasCreattor.module.css"; // plasmic-import: zM3uq0O2ue/css

export type PlasmicLojasParceirasCreattor__VariantMembers = {};

export type PlasmicLojasParceirasCreattor__VariantsArgs = {};
type VariantPropType = keyof PlasmicLojasParceirasCreattor__VariantsArgs;
export const PlasmicLojasParceirasCreattor__VariantProps =
  new Array<VariantPropType>();

export type PlasmicLojasParceirasCreattor__ArgsType = {};
type ArgPropType = keyof PlasmicLojasParceirasCreattor__ArgsType;
export const PlasmicLojasParceirasCreattor__ArgProps = new Array<ArgPropType>();

export type PlasmicLojasParceirasCreattor__OverridesType = {
  root?: p.Flex<"div">;
  footerCreattor?: p.Flex<typeof FooterCreattor>;
};

export interface DefaultLojasParceirasCreattorProps {}

function PlasmicLojasParceirasCreattor__RenderFunc(props: {
  variants: PlasmicLojasParceirasCreattor__VariantsArgs;
  args: PlasmicLojasParceirasCreattor__ArgsType;
  overrides: PlasmicLojasParceirasCreattor__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  return (
    <React.Fragment>
      {}

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox___5Tn2B)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__qfkZm
              )}
            >
              {"Lojas Parceiras"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__eimUo
              )}
            >
              {
                "Compre em um dos nossos parcerior, faça um vídeo avaliando sua compra e ganhe cashback"
              }
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__fE1Bo)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___2Q8JE)}
            >
              <div className={classNames(projectcss.all, sty.column__jIiIo)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__sBrNz)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__f6Ij7)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__gu38)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__rPjlw)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__gZcR)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__p1B6X)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___2Flt)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__hhjTm)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___1Mj1O)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column___69Jf)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__tn1Gj)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__x7Zzb)}
            >
              <div className={classNames(projectcss.all, sty.column__caZue)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__fzRS)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__jriG9)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__t2Jc)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column___8EFgi)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___12Whw)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__cWbKz)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___07FWq)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__graV)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__v0Mxg)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__c222N)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__pgK)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__arn1I)}
            >
              <div className={classNames(projectcss.all, sty.column__stekM)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__wzzUp)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__mGnqx)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__x5Y8)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__lSl2C)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__qvhCs)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__fqEkw)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___3BXrc)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__f6O1V)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__osCb6)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__bOxwF)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__xhreR)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__rqTt)}
            >
              <div className={classNames(projectcss.all, sty.column__aIiof)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__rSrM)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__xUicW)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__jtb6Q)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__uezuj)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__pzFz7)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__oXkJw)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__yUpM)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column___7Q6XW)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___84Z4)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__wfXdl)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__ft0Vp)}
                  displayHeight={"100%" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/logoVert4Png.png",
                    fullWidth: 73,
                    fullHeight: 39,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
          </div>

          <FooterCreattor
            data-plasmic-name={"footerCreattor"}
            data-plasmic-override={overrides.footerCreattor}
            className={classNames("__wab_instance", sty.footerCreattor)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "footerCreattor"],
  footerCreattor: ["footerCreattor"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  footerCreattor: typeof FooterCreattor;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicLojasParceirasCreattor__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicLojasParceirasCreattor__VariantsArgs;
    args?: PlasmicLojasParceirasCreattor__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicLojasParceirasCreattor__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicLojasParceirasCreattor__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicLojasParceirasCreattor__ArgProps,
          internalVariantPropNames: PlasmicLojasParceirasCreattor__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicLojasParceirasCreattor__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLojasParceirasCreattor";
  } else {
    func.displayName = `PlasmicLojasParceirasCreattor.${nodeName}`;
  }
  return func;
}

export const PlasmicLojasParceirasCreattor = Object.assign(
  // Top-level PlasmicLojasParceirasCreattor renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    footerCreattor: makeNodeComponent("footerCreattor"),

    // Metadata about props expected for PlasmicLojasParceirasCreattor
    internalVariantProps: PlasmicLojasParceirasCreattor__VariantProps,
    internalArgProps: PlasmicLojasParceirasCreattor__ArgProps
  }
);

export default PlasmicLojasParceirasCreattor;
/* prettier-ignore-end */
