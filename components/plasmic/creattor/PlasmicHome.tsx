// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 9aunZZ4t846y1592QqJ7VC
// Component: 5qpfwc0ApNw8V
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: 6DMO7FOqDSSQG/component
import Button from "../../Button"; // plasmic-import: 8uJGPonSAj-MG/component
import Footer from "../../Footer"; // plasmic-import: 9OL-MM7ld115y/component

import { useScreenVariants as useScreenVariantsav4KQZoKxu4Muo } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: av4kQZoKxu4MUO/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_creattor.module.css"; // plasmic-import: 9aunZZ4t846y1592QqJ7VC/projectcss
import sty from "./PlasmicHome.module.css"; // plasmic-import: 5qpfwc0ApNw8V/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: mN1jZXp3Us1XbS/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: nMqfnF4RZnsINk/icon
import Group143SvgIcon from "./icons/PlasmicIcon__Group143Svg"; // plasmic-import: 5i_RbJvVvb6Shw/icon

export type PlasmicHome__VariantMembers = {};

export type PlasmicHome__VariantsArgs = {};
type VariantPropType = keyof PlasmicHome__VariantsArgs;
export const PlasmicHome__VariantProps = new Array<VariantPropType>();

export type PlasmicHome__ArgsType = {};
type ArgPropType = keyof PlasmicHome__ArgsType;
export const PlasmicHome__ArgProps = new Array<ArgPropType>();

export type PlasmicHome__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<typeof Header>;
  h1?: p.Flex<"h1">;
  svg?: p.Flex<"svg">;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultHomeProps {}

function PlasmicHome__RenderFunc(props: {
  variants: PlasmicHome__VariantsArgs;
  args: PlasmicHome__ArgsType;
  overrides: PlasmicHome__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsav4KQZoKxu4Muo()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />

        <title key="title">{"Sou.Tech - Página Inicial"}</title>

        <meta
          key="og:title"
          property="og:title"
          content={"Sou.Tech - Página Inicial"}
        />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={"Sou.Tech - Página Inicial"}
        />

        <meta
          key="description"
          name="description"
          content={
            "Somos a Sou.Tech um novo conceito em \ntransformação digital. Especialistas em campanhas de marketing de e-commerce de alta conversão, sempre buscamos performance!"
          }
        />

        <meta
          key="og:description"
          property="og:description"
          content={
            "Somos a Sou.Tech um novo conceito em \ntransformação digital. Especialistas em campanhas de marketing de e-commerce de alta conversão, sempre buscamos performance!"
          }
        />

        <meta
          key="twitter:description"
          name="twitter:description"
          content={
            "Somos a Sou.Tech um novo conceito em \ntransformação digital. Especialistas em campanhas de marketing de e-commerce de alta conversão, sempre buscamos performance!"
          }
        />

        <meta
          key="og:image"
          property="og:image"
          content={
            "https://site-assets.plasmic.app/ea54075587074469a584b98f68a3a3ee.png"
          }
        />

        <meta
          key="twitter:image"
          name="twitter:image"
          content={
            "https://site-assets.plasmic.app/ea54075587074469a584b98f68a3a3ee.png"
          }
        />

        <link ref="canonical" href={"http://sou.tech/"} />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__khu4T)}>
            <Header
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames("__wab_instance", sty.header)}
            >
              <p.PlasmicLink
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__cOyig
                )}
                component={Link}
                href={"#sobre" as const}
                platform={"nextjs"}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#FFFFFF" }}
                  >
                    {"Sobre"}
                  </span>
                </React.Fragment>
              </p.PlasmicLink>

              <p.PlasmicLink
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__ae9Yz
                )}
                component={Link}
                href={"/contato" as const}
                platform={"nextjs"}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#FFFFFF" }}
                  >
                    {"Contato"}
                  </span>
                </React.Fragment>
              </p.PlasmicLink>
            </Header>

            <p.Stack
              as={"section"}
              hasGap={true}
              className={classNames(projectcss.all, sty.section__fE4Gr)}
            >
              <div className={classNames(projectcss.all, sty.columns__ngGtM)}>
                <div className={classNames(projectcss.all, sty.column___1ViL8)}>
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#FFFFFF" }}
                        >
                          {"Somos a "}
                        </span>
                        <React.Fragment>{""}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#F739D5" }}
                        >
                          {"Sou.tech"}
                        </span>
                        <React.Fragment>{""}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#FFFFFF" }}
                        >
                          {" um novo conceito em "}
                        </span>
                        <React.Fragment>{""}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#F739D5" }}
                        >
                          {"transformação digital."}
                        </span>
                      </React.Fragment>
                    ) : (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#FFFFFF" }}
                        >
                          {"Somos a "}
                        </span>
                        <React.Fragment>{""}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#F739D5" }}
                        >
                          {"Sou.tech"}
                        </span>
                        <React.Fragment>{""}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#FFFFFF" }}
                        >
                          {" um novo conceito em "}
                        </span>
                        <React.Fragment>{"\n"}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#F739D5" }}
                        >
                          {"transformação digital."}
                        </span>
                      </React.Fragment>
                    )}
                  </h1>
                </div>

                <div className={classNames(projectcss.all, sty.column___2E8GY)}>
                  <Button
                    className={classNames("__wab_instance", sty.button__kDdSy)}
                    color={"pink" as const}
                    link={"#sobre" as const}
                    shape={"rounded" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wafn9
                      )}
                    >
                      {"SAIBA MAIS"}
                    </div>
                  </Button>
                </div>
              </div>
            </p.Stack>
          </div>

          {true ? (
            <section
              className={classNames(projectcss.all, sty.section__r67O5)}
              id={"sobre" as const}
            >
              <div className={classNames(projectcss.all, sty.columns__zfK6B)}>
                <div className={classNames(projectcss.all, sty.column__bqDb2)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___3FBsg)}
                  >
                    {true ? (
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__aUlDg)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/creattor/images/group50916Png.png",
                          fullWidth: 438,
                          fullHeight: 452,
                          aspectRatio: undefined
                        }}
                      />
                    ) : null}

                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : false
                    ) ? (
                      <p
                        className={classNames(
                          projectcss.all,
                          projectcss.p,
                          projectcss.__wab_text,
                          sty.p__cU6VT
                        )}
                      >
                        {"Estamos aqui! Estamos prontos para te atender."}
                      </p>
                    ) : null}

                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : false
                    ) ? (
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button___4Gb3I
                        )}
                        color={"darkBlue" as const}
                        link={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("https://api.whatsapp.com/send?phone=5513920001845&text=Ol%C3%A1!" as const)
                            : ("https://api.whatsapp.com/send?phone=5513920001845&text=Ol%C3%A1!" as const)
                        }
                        shape={"rounded" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wTlD
                          )}
                        >
                          {"ENTRE EM CONTATO"}
                        </div>
                      </Button>
                    ) : null}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column__lQyva)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__gl4Hc)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__bOccw
                      )}
                    >
                      {
                        "Nascemos dentro do maior \ne-commerce de produtos para bebês da América Latina!"
                      }
                    </h2>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yBwep
                      )}
                    >
                      {
                        "Vivemos durante décadas o dia a dia do e-commerce, e por isso sabemos as dores de cada centavo gasto por um clique errado em um anúncio.\n\nDurante anos fomos procurados para atuar no marketing digital de grandes marcas, e a nossa resposta sempre foi não. Mas hoje ela é sim! Estamos prontos para levar todo nosso know-how para o mercado.\n\nCom 20 anos de experiência e expertise, desenvolvemos diversas ferramentas internas de análise de campanhas, de dados e de otimização de conteúdo, assim, resolvemos dar vida a sou.tech!"
                      }
                    </div>

                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <p
                        className={classNames(
                          projectcss.all,
                          projectcss.p,
                          projectcss.__wab_text,
                          sty.p__dvVvf
                        )}
                      >
                        {"Estamos aqui! Estamos prontos para te atender."}
                      </p>
                    ) : null}

                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__c5Vsf
                        )}
                        color={"darkBlue" as const}
                        link={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("#contato" as const)
                            : ("/contato" as const)
                        }
                        shape={"rounded" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gl5Lb
                          )}
                        >
                          {"ENTRE EM CONTATO"}
                        </div>
                      </Button>
                    ) : null}
                  </div>
                </div>
              </div>
            </section>
          ) : null}

          <section className={classNames(projectcss.all, sty.section__li490)}>
            <h2
              className={classNames(
                projectcss.all,
                projectcss.h2,
                projectcss.__wab_text,
                sty.h2__vJgGe
              )}
            >
              {
                "Estratégias de marketing para\ncomércio eletrônico orientadas por dados, com foco em aumento de receita."
              }
            </h2>

            <div className={classNames(projectcss.all, sty.columns__igrsl)}>
              <div className={classNames(projectcss.all, sty.column__hcAnQ)}>
                <div className={classNames(projectcss.all, sty.freeBox__h7D84)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iGqTv
                    )}
                  >
                    {"1.0 Publicidade paga"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aUqK
                    )}
                  >
                    {"2.0 Marketing de mídia social"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jIs7T
                    )}
                  >
                    {"3.0 SEO e marketing de conteúdo"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__afr24
                    )}
                  >
                    {"4.0 Otimização da taxa de conversão"}
                  </div>
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.column___6N64G)}>
                <div className={classNames(projectcss.all, sty.freeBox__uGWl)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fMFaV
                    )}
                  >
                    {
                      "Na sou.tech, sabemos exatamente o que separa os esforços comuns das melhores campanhas de marketing, e usamos esse conhecimento para fornecer resultados que mudam os negócios para marcas de comércio eletrônico em crescimento ou já estabelecidas. Como uma agência de marketing de escopo completo, aliamos 20 anos de experiência em e-commerce, marketing, e tecnologia, com o nosso foco em aumentar a receita."
                    }
                  </div>
                </div>
              </div>
            </div>
          </section>

          {true ? (
            <section className={classNames(projectcss.all, sty.section__snJg5)}>
              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__hcZa2)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/creattor/images/group50914Png.png",
                    fullWidth: 57,
                    fullHeight: 58,
                    aspectRatio: undefined
                  }}
                />
              ) : null}

              <div className={classNames(projectcss.all, sty.columns__l5VD)}>
                <div className={classNames(projectcss.all, sty.column__dA3Pj)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__gBtnu)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__ltG3O)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/creattor/images/image2.png",
                        fullWidth: 438,
                        fullHeight: 452,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column__pOsOd)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___0Ld55)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__jiaVp
                      )}
                    >
                      {
                        "Somos especialistas em campanhas de marketing de comércio eletrônico de alta conversão, sempre buscamos performance!"
                      }
                    </h2>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rmerT
                      )}
                    >
                      {
                        "A experiência em comércio eletrônico da Sou.Tech auxilia nossos clientes no aumento de receita e ganho de seguidores por meio de estratégias de publicidade digital altamente segmentadas. Estratégias que são memoráveis e validadas!\n\nOferecemos publicidade especializada em marketplace, pesquisa paga e anúncios sociais, marketing de conteúdo, SEO, CRO e muito mais. Mas como fazemos isso? \n\nCom táticas de marketing digital personalizadas e atualizadas, growth hacks e ferramentas de otimização para sua campanha de marketing de comércio eletrônico.\n\nSomos uma das principais agências de marketing de comércio eletrônico do país, e atendemos grandes empresas de e-commerce em diversos segmentos. Entendemos como o sucesso pode ser difícil, implacável e competitivo. \n\nE, principalmente, sabemos que o caminho para grandes resultados é diferente para cada marca. Por isso, nossa operação inclui uma análise completa para a melhor compreensão possível do seu negócio.\n\nEstamos aqui em busca de conversão.\nSe é isso que procura, chegou no lugar certo."
                      }
                    </div>
                  </div>
                </div>
              </div>
            </section>
          ) : null}

          {true ? (
            <section className={classNames(projectcss.all, sty.section__pvc4)}>
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__qb5Oe)}
                displayHeight={"auto" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/creattor/images/group50913Png.png",
                  fullWidth: 53,
                  fullHeight: 106,
                  aspectRatio: undefined
                }}
              />

              <div className={classNames(projectcss.all, sty.columns__yGm0S)}>
                <div className={classNames(projectcss.all, sty.column__cy4Uo)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__w6Jc9)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__eEeUq
                      )}
                    >
                      {
                        "Somos inovadores, nascemos ontem e já temos grandes resultados!"
                      }
                    </h2>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__evu6W
                      )}
                    >
                      {
                        "Conheça nossas capacidades e comece a obter resultados positivos em suas receitas."
                      }
                    </div>
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column__cUByS)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__nXzqH)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__hvGF)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/creattor/images/image3.png",
                        fullWidth: 438,
                        fullHeight: 452,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </div>
              </div>
            </section>
          ) : null}

          {true ? (
            <section className={classNames(projectcss.all, sty.section__dKacc)}>
              <div className={classNames(projectcss.all, sty.columns__gvIwX)}>
                <div className={classNames(projectcss.all, sty.column__cGb36)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lpiPr)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__hXv5F)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/creattor/images/image4.png",
                        fullWidth: 438,
                        fullHeight: 452,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column__iFaZ)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___4WjTk)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__bxzzo
                      )}
                    >
                      {"Conteúdo, o motor da web, tudo começa por aqui"}
                    </h2>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qww6I
                      )}
                    >
                      {
                        "Todos esses anos nos deram a prática e o tempo para desenvolver ferramentas, apps e técnicas de criação de conteúdo focado em engajamento. Sim, trabalhamos com estratégia e inteligência na criação de conteúdo para suas campanhas!\n\nAcreditamos que o conteúdo é o coração da web, então antes\nde postar, pensamos, estudamos, analisamos, mensuramos.\n\nEssa foi uma das principais estratégias para colocar graodegente.com.br como a segunda empresa mais engajada\ndo insta e face, na frente de gigantes que gastam até 100x mais\nde marketing online.\n\nConhecemos as palavras complicadas que usam no mercado, mas para nós o e-commerce é simples e se resume a: comprar a visita da pessoa certa e vender um bom conteúdo pra ela! \n\nEstes com certeza são os principais elementos para a conversão, saber comprar o público e saber o que vender para ele, nisso somos especialistas e temos como provar!"
                      }
                    </div>
                  </div>
                </div>
              </div>

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__knv3M)}
                displayHeight={"auto" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? ("50px" as const)
                    : ("auto" as const)
                }
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/creattor/images/group50926Png.png",
                  fullWidth: 179,
                  fullHeight: 508,
                  aspectRatio: undefined
                }}
              />
            </section>
          ) : null}

          {true ? (
            <section className={classNames(projectcss.all, sty.section___5Zjk)}>
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__vud7E)}
                displayHeight={"auto" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/creattor/images/group50927Png.png",
                  fullWidth: 55,
                  fullHeight: 106,
                  aspectRatio: undefined
                }}
              />

              <div className={classNames(projectcss.all, sty.columns__jDFt4)}>
                <div className={classNames(projectcss.all, sty.column__vTmWc)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bWb52)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__zjSxa
                      )}
                    >
                      {
                        "Tecnologia, marketing, BIG DATA, IA, conhecimento de mercado."
                      }
                    </h2>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cdPuu
                      )}
                    >
                      {
                        "Acreditamos que estes são os pilares que nos diferenciam do mercado! \n\nNuma analogia, hoje o marketing sem tecnologia é como um carro com o pneu furado, vai gastar mais combustível, ser limitado e logo ali na frente vai parar.\n\nNós fazemos marketing porque somos de tecnologia, entendemos tecnologia e vivemos tecnologia! \n\nNossa operação acompanha a jornada do usuário do começo ao fim, do topo do funil ao pós-venda. E nós fazemos isso com base em dados e inteligência estratégica.\n\nQueremos mais do que resultados rápidos, queremos o seu crescimento digital!"
                      }
                    </div>
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column__pbZH)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__k6VvF)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__uz5Y1)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/creattor/images/image5.png",
                        fullWidth: 438,
                        fullHeight: 452,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </div>
              </div>
            </section>
          ) : null}

          {true ? (
            <section
              className={classNames(projectcss.all, sty.section___8VhzR)}
              id={"contato" as const}
            >
              <div className={classNames(projectcss.all, sty.columns__xVoR)}>
                <div className={classNames(projectcss.all, sty.column___2Hfg5)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uNfwl
                    )}
                  >
                    {"Fale conosco e venha"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mzAc2
                    )}
                  >
                    {"Ser Tech"}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column__xAHiq)}>
                  <Button
                    className={classNames("__wab_instance", sty.button__qpZoW)}
                    color={"outline" as const}
                    link={"/contato" as const}
                    shape={"rounded" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gAuf5
                      )}
                    >
                      {"ENTRE EM CONTATO"}
                    </div>
                  </Button>
                </div>
              </div>

              {true ? (
                <div className={classNames(projectcss.all, sty.columns__vaExO)}>
                  <div className={classNames(projectcss.all, sty.column__tkS)}>
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__jms8O
                      )}
                      component={Link}
                      href={"https://www.instagram.com/sou.tech.br/" as const}
                      platform={"nextjs"}
                      target={"_blank" as const}
                    >
                      <Group143SvgIcon
                        data-plasmic-name={"svg"}
                        data-plasmic-override={overrides.svg}
                        className={classNames(projectcss.all, sty.svg)}
                        role={"img"}
                      />
                    </p.PlasmicLink>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__uJqbo)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__gHbon
                      )}
                      component={Link}
                      href={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? ("https://www.instagram.com/sou.tech.br/" as const)
                          : ("https://www.instagram.com/sou.tech.br/" as const)
                      }
                      platform={"nextjs"}
                      target={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? ("_blank" as const)
                          : ("_blank" as const)
                      }
                    >
                      {"@sou.tech.br"}
                    </p.PlasmicLink>
                  </div>
                </div>
              ) : null}

              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <div className={classNames(projectcss.all, sty.freeBox__dcGt)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__eyGdg)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("100%" as const)
                        : ("auto" as const)
                    }
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/creattor/images/image6.png",
                      fullWidth: 1124,
                      fullHeight: 283,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              ) : null}
            </section>
          ) : null}

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "header", "h1", "svg", "footer"],
  header: ["header"],
  h1: ["h1"],
  svg: ["svg"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  h1: "h1";
  svg: "svg";
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHome__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHome__VariantsArgs;
    args?: PlasmicHome__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHome__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHome__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHome__ArgProps,
          internalVariantPropNames: PlasmicHome__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHome";
  } else {
    func.displayName = `PlasmicHome.${nodeName}`;
  }
  return func;
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    h1: makeNodeComponent("h1"),
    svg: makeNodeComponent("svg"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps
  }
);

export default PlasmicHome;
/* prettier-ignore-end */
